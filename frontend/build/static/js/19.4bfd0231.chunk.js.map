{"version":3,"sources":["assets/img/login-office.jpeg","assets/img/login-office-dark.jpeg","pages/Login.js"],"names":["module","exports","Login","useState","username","password","credentials","setCredentials","React","useContext","SessionContext","session","login","dispatch","useEffect","type","AUTH","GET_ADMIN","handleChange","e","target","name","value","loggedIn","to","className","aria-hidden","src","ImageLight","alt","ImageDark","placeholder","onChange","block","onClick"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,gD,kJCgG5BC,UAxFf,WAAkB,IAAD,EACuBC,mBAAS,CAC7CC,SAAU,GACVC,SAAU,KAHG,mBACRC,EADQ,KACKC,EADL,OAKsBC,IAAMC,WAAWC,KAA9CC,EALO,EAKPA,QAASC,EALF,EAKEA,MAAOC,EALT,EAKSA,SAExBC,qBAAU,WACRD,EAAS,CAAEE,KAAMC,IAAKC,cACrB,IAEH,IAAMC,EAAe,SAACC,GACpBZ,EAAe,2BAAKD,GAAN,kBAAoBa,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAG7D,OAAIX,EAAQY,SACH,kBAAC,IAAD,CAAUC,GAAG,MAIpB,yBAAKC,UAAU,kEACb,yBAAKA,UAAU,kGACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,2BACb,yBACEC,cAAY,OACZD,UAAU,yCACVE,IAAKC,IACLC,IAAI,WAEN,yBACEH,cAAY,OACZD,UAAU,+CACVE,IAAKG,IACLD,IAAI,YAGR,0BAAMJ,UAAU,yDACd,yBAAKA,UAAU,UACb,wBAAIA,UAAU,+DAAd,SAGA,kBAAC,QAAD,KACE,6CACA,kBAAC,QAAD,CACEA,UAAU,OACVV,KAAK,OACLM,KAAK,WACLU,YAAY,oBACZT,MAAOhB,EAAYF,SACnB4B,SAAUd,KAId,kBAAC,QAAD,CAAOO,UAAU,QACf,8CACA,kBAAC,QAAD,CACEA,UAAU,OACVV,KAAK,WACLM,KAAK,WACLC,MAAOhB,EAAYD,SACnB0B,YAAY,kBACZC,SAAUd,KAId,kBAAC,SAAD,CAAQO,UAAU,OAAOQ,OAAK,EAACC,QAAS,kBAAMtB,EAAMN,KAApD,gBAIA,wBAAImB,UAAU,SAEd,uBAAGA,UAAU,QACX,kBAAC,IAAD,CACEA,UAAU,2EACVD,GAAG,oBAFL","file":"static/js/19.4bfd0231.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login-office.72742c2e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/login-office-dark.cb4a995f.jpeg\";","import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport ImageLight from \"../assets/img/login-office.jpeg\";\nimport ImageDark from \"../assets/img/login-office-dark.jpeg\";\nimport { Label, Input, Button } from \"@windmill/react-ui\";\nimport { SessionContext, AUTH } from \"../reducers/session\";\n\nfunction Login() {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const { session, login, dispatch } = React.useContext(SessionContext);\n\n  useEffect(() => {\n    dispatch({ type: AUTH.GET_ADMIN });\n  }, []);\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  if (session.loggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\n        <div className=\"flex flex-col overflow-y-auto md:flex-row\">\n          <div className=\"h-32 md:h-auto md:w-1/2\">\n            <img\n              aria-hidden=\"true\"\n              className=\"object-cover w-full h-full dark:hidden\"\n              src={ImageLight}\n              alt=\"Office\"\n            />\n            <img\n              aria-hidden=\"true\"\n              className=\"hidden object-cover w-full h-full dark:block\"\n              src={ImageDark}\n              alt=\"Office\"\n            />\n          </div>\n          <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\n            <div className=\"w-full\">\n              <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">\n                Login\n              </h1>\n              <Label>\n                <span>Utilisateur</span>\n                <Input\n                  className=\"mt-1\"\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Nom d'utilisateur\"\n                  value={credentials.username}\n                  onChange={handleChange}\n                />\n              </Label>\n\n              <Label className=\"mt-4\">\n                <span>Mot de passe</span>\n                <Input\n                  className=\"mt-1\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={credentials.password}\n                  placeholder=\"***************\"\n                  onChange={handleChange}\n                />\n              </Label>\n\n              <Button className=\"mt-4\" block onClick={() => login(credentials)}>\n                Se Connecter\n              </Button>\n\n              <hr className=\"my-8\" />\n\n              <p className=\"mt-4\">\n                <Link\n                  className=\"text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline\"\n                  to=\"/forgot-password\"\n                >\n                  Mot de passe oubli√©?\n                </Link>\n              </p>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"],"sourceRoot":""}