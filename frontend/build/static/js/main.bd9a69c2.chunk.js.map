{"version":3,"sources":["redux/generics/createGenericSlice.js","redux/generics/create.js","redux/generics/getAll.js","redux/generics/deleteItem.js","redux/generics/createGenericReducer.js","reducers/session.js","context/SidebarContext.js","redux/features/portfolio/skills.js","redux/features/portfolio/learnings.js","redux/features/portfolio/educations.js","redux/features/config.js","components/ThemedSuspense.js","redux/features/portfolio/experiences.js","redux/features/nailedIt/companies.js","redux/features/nailedIt/sendingConfigs.js","redux/features/nailedIt/processes.js","redux/features/nailedIt/emailTemplates.js","redux/features/portfolio/projects.js","redux/store.js","components/AccessibleNavigationAnnouncer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","delete","fetching","loaded","error","collection","items","createGenericSlice","type","url","extraReducers","createGenericReducer","slice","createSlice","name","reducers","actions","reducer","create","createAsyncThunk","a","params","fetch","method","headers","body","JSON","stringify","data","json","result","_id","Error","getAll","deleteItem","id","apiUrl","getAllGeneric","createGeneric","deleteItemGeneric","pending","key","state","action","rejected","payload","fulfilled","concat","newItems","filter","item","AUTH","LOGIN","LOGIN_SUCCESS","TRY_LOGIN","LOGIN_FAILED","GET_ADMIN","LOGOUT","FETCHING_LOGOUT","LOADED_LOGOUT","FETCHING_TOKEN","SessionContext","React","createContext","loggedIn","user","status","message","errorType","SessionProvider","children","useReducer","session","dispatch","_dispatch","useCallback","middleware","baseUrl","window","location","origin","credentials","then","res","catch","err","console","log","Provider","value","logout","login","SidebarContext","SidebarProvider","useState","isSidebarOpen","setIsSidebarOpen","toggleSidebar","closeSidebar","useMemo","skillsSlice","Skills","learningsSlice","Learnings","educationsSlice","Educations","require","getSelectsLists","configSlice","dataLists","companiesList","processesList","Config","ThemedSuspense","className","experiencesSlice","Experiences","companiesSlice","Companies","lists","SendingConfigs","processesSlice","Processes","emailTemplatesSlice","EmailTemplates","projects","projectsSlice","upload","formData","configureStore","config","configReducer","experiences","experiencesReducer","learnings","learningsReducer","skills","skillsReducer","projectsReducer","educations","educationsReducer","companies","companiesReducer","sendingConfigs","sendingConfigsReducer","processes","processesReducer","emailTemplates","emailTemplatesReducer","AccessibleNavigationAnnouncer","setMessage","useLocation","useEffect","pathname","setTimeout","role","aria-live","aria-atomic","Layout","lazy","Login","CreateAccount","ForgotPassword","App","store","basename","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","fallback","usePreferences","document","getElementById","URL","process","href","addEventListener","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bd9a69c2.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport createGenericReducer from \"./createGenericReducer\";\r\n\r\nconst initialState = {\r\n  delete: {\r\n    fetching: false,\r\n    loaded: false,\r\n    error: \"\",\r\n  },\r\n  collection: {\r\n    items: [],\r\n    error: \"\",\r\n    fetching: false,\r\n    loaded: false,\r\n  },\r\n};\r\n\r\nconst createGenericSlice = (type, url) => {\r\n  const extraReducers = createGenericReducer(type, url);\r\n\r\n  const slice = createSlice({\r\n    name: type,\r\n    initialState,\r\n    extraReducers: {\r\n      ...extraReducers.reducers,\r\n    },\r\n  });\r\n\r\n  return {\r\n    actions: {\r\n      ...slice.actions,\r\n      ...extraReducers.actions,\r\n    },\r\n    reducers: slice.reducer,\r\n  };\r\n};\r\n\r\nexport default createGenericSlice;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst create = (type, url) =>\r\n  createAsyncThunk(`${type}/create`, async (params = {}, callback = \"\") => {\r\n    const data = await fetch(url + \"/\" + type, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(params),\r\n    });\r\n    const result = await data.json();\r\n    if (!result._id) throw Error(result);\r\n    return result;\r\n  });\r\n\r\nexport default create;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst getAll = (type, url) =>\r\n  createAsyncThunk(`${type}/getAll`, async () => {\r\n    const data = await fetch(url + \"/\" + type);\r\n    return await data.json();\r\n  });\r\n\r\nexport default getAll;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst deleteItem = (type, url) =>\r\n  createAsyncThunk(`${type}/delete`, async (id, callback = \"\") => {\r\n    const data = await fetch(url + \"/\" + type + \"/\" + id, {\r\n      method: \"DELETE\",\r\n    });\r\n    return await data.json();\r\n  });\r\n\r\nexport default deleteItem;\r\n","import createGeneric from \"./create\";\r\nimport getAllGeneric from \"./getAll\";\r\nimport deleteItemGeneric from \"./deleteItem\";\r\n\r\nlet baseUrl =\r\n  process.env.NODE_ENV === \"production\" ? \"\" : process.env.REACT_APP_API_URL;\r\n\r\nfunction createGenericReducer(type, url) {\r\n  const apiUrl = baseUrl + url;\r\n  const getAll = getAllGeneric(type, apiUrl);\r\n  const create = createGeneric(type, apiUrl);\r\n  const deleteItem = deleteItemGeneric(type, apiUrl);\r\n\r\n  const pending = (key) => (state,action) => {\r\n    state[key].fetching = true;\r\n  };\r\n  const resolveGetAll = (state, action) => {\r\n    state.collection.fetching = false;\r\n    state.collection.loaded = true;\r\n    state.collection.items = action.payload.data;\r\n  };\r\n  const resolveCreate = (state, action) => {\r\n    state.collection.fetching = false;\r\n    state.collection.loaded = true;\r\n    state.collection.items = state.collection.items.concat(action.payload);\r\n  };\r\n  const resolveDelete = (state, action) => {\r\n    let newItems = state.collection.items.filter((item) => {\r\n      return !(item._id === action.payload._id);\r\n    });\r\n    state.collection.items = newItems;\r\n  };\r\n  const rejected = (key) => (state, action) => {\r\n    state[key].fetching = false;\r\n    state[key].loaded = true;\r\n    state[key].error = action.payload;\r\n  };\r\n\r\n  return {\r\n    actions: {\r\n      getAll,\r\n      create,\r\n      deleteItem,\r\n    },\r\n    reducers: {\r\n      [getAll.pending]: pending(\"collection\"),\r\n      [getAll.fulfilled]: resolveGetAll,\r\n      [getAll.rejected]: rejected(\"collection\"),\r\n      [create.pending]: pending(\"collection\"),\r\n      [create.fulfilled]: resolveCreate,\r\n      [create.rejected]: rejected(\"collection\"),\r\n      [deleteItem.pending]: pending(\"delete\"),\r\n      [deleteItem.fulfilled]: resolveDelete,\r\n      [deleteItem.rejected]: rejected(\"delete\"),\r\n      // [getOne.pending]: pending('item'),\r\n    },\r\n  };\r\n}\r\n\r\nexport default createGenericReducer;\r\n","import React from \"react\";\r\n\r\nexport const AUTH = {\r\n  LOGIN: \"AUTH-LOGIN\",\r\n  LOGIN_SUCCESS: \"AUTH-LOGIN_SUCCESS\",\r\n  TRY_LOGIN: \"AUTH-TRY_LOGIN\",\r\n  LOGIN_FAILED: \"AUTH-LOGIN_FAILED\",\r\n  GET_ADMIN: \"AUTH-GET_ADMIN\",\r\n  LOGOUT: \"AUTH-LOGOUT\",\r\n  FETCHING_LOGOUT: \"AUTH-FETCHING_LOGOUT\",\r\n  LOADED_LOGOUT: \"AUTH-LOADED_LOGOUT\",\r\n  FETCHING_TOKEN: \"AUTH-FETCHING_TOKEN\",\r\n};\r\n\r\nexport const SessionContext = React.createContext({});\r\n\r\nconst initialState = {\r\n  loaded: false,\r\n  fetching: false,\r\n  loggedIn: false,\r\n  user: {},\r\n  error: {\r\n    status: false,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH.LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        fetching: false,\r\n        loggedIn: false,\r\n        error: {\r\n          status: action.payload.errorType !== \"noToken\",\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n    case AUTH.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        fetching: false,\r\n        user: action.payload,\r\n        loggedIn: true,\r\n      };\r\n    case AUTH.TRY_LOGIN:\r\n      return {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n    case AUTH.FETCHING_LOGOUT:\r\n      return {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n    case AUTH.LOADED_LOGOUT:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        user: {},\r\n      };\r\n    case AUTH.FETCHING_TOKEN:\r\n      return {\r\n        ...state,\r\n        loaded: false,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst middleware = (dispatch) => (action) => {\r\n  let baseUrl = \"\";\r\n\r\n  if (window.location.origin === \"http://localhost:3000\") {\r\n    baseUrl = \"http://localhost:5000\";\r\n  }\r\n  switch (action.type) {\r\n    case AUTH.LOGOUT:\r\n      dispatch({ type: AUTH.FETCHING_LOGOUT });\r\n      fetch(baseUrl + \"/api/auth/logout\", {\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json.error) throw new Error(json.message);\r\n          dispatch({ type: AUTH.LOADED_LOGOUT });\r\n        })\r\n        .catch((err) => console.log(err));\r\n      break;\r\n    case AUTH.LOGIN:\r\n      fetch(baseUrl + \"/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(action.payload),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json.error) throw new Error(json.message);\r\n          middleware(dispatch)({ type: AUTH.GET_ADMIN, payload: json });\r\n        })\r\n        .catch((err) =>\r\n          dispatch({\r\n            type: AUTH.LOGIN_FAILED,\r\n            payload: { errorType: \"credentials\", message: err.message },\r\n          })\r\n        );\r\n      break;\r\n    case AUTH.GET_ADMIN:\r\n      dispatch({ type: AUTH.TRY_LOGIN });\r\n      fetch(baseUrl + \"/api/auth/user\", {\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((user) => {\r\n          if (user.error) throw new Error(user.message);\r\n          dispatch({ type: AUTH.LOGIN_SUCCESS, payload: user });\r\n        })\r\n        .catch((err) =>\r\n          dispatch({\r\n            type: AUTH.LOGIN_FAILED,\r\n            payload: { errorType: \"noToken\" },\r\n          })\r\n        );\r\n      break;\r\n    default:\r\n      dispatch(action);\r\n      break;\r\n  }\r\n};\r\n\r\nconst SessionProvider = ({ children }) => {\r\n  const [session, dispatch] = React.useReducer(reducer, initialState);\r\n  const _dispatch = React.useCallback(middleware(dispatch), [dispatch]);\r\n  const logout = () => {\r\n    _dispatch({ type: AUTH.LOGOUT });\r\n  };\r\n  const login = (credentials) => {\r\n    _dispatch({ type: AUTH.LOGIN, payload: credentials });\r\n  };\r\n  return (\r\n    <SessionContext.Provider\r\n      value={{ session, dispatch: _dispatch, logout, login }}\r\n    >\r\n      {children}\r\n    </SessionContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SessionProvider;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\n// create context\r\nexport const SidebarContext = React.createContext();\r\n\r\nexport const SidebarProvider = ({ children }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  const toggleSidebar = useCallback(() => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  }, [setIsSidebarOpen,isSidebarOpen]);\r\n\r\n  const closeSidebar = useCallback(() => {\r\n    setIsSidebarOpen(false);\r\n  },[setIsSidebarOpen]);\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isSidebarOpen,\r\n      toggleSidebar,\r\n      closeSidebar,\r\n    }),\r\n    [isSidebarOpen, toggleSidebar, closeSidebar]\r\n  );\r\n\r\n  return (\r\n    <SidebarContext.Provider value={value}>{children}</SidebarContext.Provider>\r\n  );\r\n};\r\n","import createGenericSlice from \"../../generics/createGenericSlice\";\r\n\r\nconst skillsSlice = createGenericSlice(\"skills\", \"/api/portfolio\");\r\n\r\nexport const Skills = {\r\n  ...skillsSlice.actions,\r\n};\r\n\r\nexport default skillsSlice.reducers;\r\n","import createGenericSlice from \"../../generics/createGenericSlice\";\r\n\r\nconst learningsSlice = createGenericSlice(\"learnings\", \"/api/portfolio\");\r\n\r\nexport const Learnings = {\r\n  ...learningsSlice.actions,\r\n};\r\n\r\nexport default learningsSlice.reducers;\r\n","import createGenericSlice from \"../../generics/createGenericSlice\";\r\n\r\nconst educationsSlice = createGenericSlice(\"educations\", \"/api/portfolio\");\r\n\r\nexport const Educations = {\r\n  ...educationsSlice.actions,\r\n};\r\n\r\nexport default educationsSlice.reducers;\r\n","const { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nlet type = \"config\";\r\nlet url = \"/api/config\";\r\nlet baseUrl =\r\n  process.env.NODE_ENV === \"production\" ? \"\" : \"http://localhost:5000\";\r\nconst apiUrl = baseUrl + url;\r\n\r\nconst getSelectsLists = createAsyncThunk(\r\n  `${type}/getSelectsLists`,\r\n  async () => {\r\n    const data = await fetch(apiUrl);\r\n    const result = await data.json();\r\n    return result;\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  dataLists: {\r\n    fetching: false,\r\n    loaded: false,\r\n    error: {\r\n      status: false,\r\n      message: \"\",\r\n    },\r\n    companiesList: [],\r\n    processesList: [],\r\n  },\r\n};\r\n\r\nconst configSlice = createSlice({\r\n  name: \"config\",\r\n  initialState,\r\n  extraReducers: {\r\n    [getSelectsLists.pending]: (state) => {\r\n      state.dataLists.fetching = true;\r\n    },\r\n    [getSelectsLists.fulfilled]: (state, action) => {\r\n      state.dataLists.fetching = false;\r\n      state.dataLists.loaded = true;\r\n      state.dataLists.companiesList = action.payload.companiesList;\r\n      state.dataLists.processesList = action.payload.processesList;\r\n    },\r\n    [getSelectsLists.rejected]: (state, action) => {\r\n      state.dataLists.fetching = false;\r\n      state.dataLists.error = {\r\n        status: true,\r\n        message: \"Data not found.\",\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const Config = {\r\n  ...configSlice.actions,\r\n  getSelectsLists,\r\n};\r\n\r\nexport default configSlice.reducer;\r\n","import React from 'react'\r\n\r\nfunction ThemedSuspense() {\r\n  return (\r\n    <div className=\"w-full h-screen p-6 text-lg font-medium text-gray-600 dark:text-gray-400 dark:bg-gray-900\">\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemedSuspense\r\n","import createGenericSlice from \"../../generics/createGenericSlice\";\r\n\r\nconst experiencesSlice = createGenericSlice(\"experiences\", \"/api/portfolio\");\r\n\r\nexport const Experiences = {\r\n  ...experiencesSlice.actions,\r\n};\r\n\r\nexport default experiencesSlice.reducers;\r\n","import createGenericSlice from \"../../generics/createGenericSlice\";\r\n\r\nconst companiesSlice = createGenericSlice(\"companies\", \"/api/nailedIt\");\r\n\r\nexport const Companies = {\r\n  ...companiesSlice.actions,\r\n};\r\n\r\nexport default companiesSlice.reducers;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport createGenericReducer from \"../../generics/createGenericReducer\";\r\n\r\nconst type = \"sendingConfigs\";\r\nconst url = \"/api/nailedIt\";\r\n\r\nconst initialState = {\r\n  delete: {\r\n    fetching: false,\r\n    loaded: false,\r\n    error: \"\",\r\n  },\r\n  collection: {\r\n    items: [],\r\n    error: \"\",\r\n    fetching: false,\r\n    loaded: false,\r\n    lists: {\r\n      companiesList: [],\r\n      processesList: [],\r\n      error: false,\r\n    },\r\n  },\r\n};\r\n\r\nconst extraReducers = createGenericReducer(type, url);\r\n\r\nconst slice = createSlice({\r\n  name: type,\r\n  initialState,\r\n  extraReducers: {\r\n    ...extraReducers.reducers,\r\n  },\r\n});\r\n\r\nexport const SendingConfigs = {\r\n  ...slice.actions,\r\n  ...extraReducers.actions,\r\n};\r\n\r\nexport default slice.reducer;\r\n","import createGenericSlice from \"../../generics/createGenericSlice\";\r\n\r\nconst processesSlice = createGenericSlice(\"processes\", \"/api/nailedIt\");\r\n\r\nexport const Processes = {\r\n  ...processesSlice.actions,\r\n};\r\n\r\nexport default processesSlice.reducers;\r\n","import createGenericSlice from \"../../generics/createGenericSlice\";\r\n\r\nconst emailTemplatesSlice = createGenericSlice(\"emailTemplates\", \"/api/nailedIt\");\r\n\r\nexport const EmailTemplates = {\r\n  ...emailTemplatesSlice.actions,\r\n};\r\n\r\nexport default emailTemplatesSlice.reducers;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport createGenericReducer from \"../../generics/createGenericReducer\";\r\n\r\nconst type = \"projects\";\r\nlet baseUrl =\r\n  process.env.NODE_ENV === \"production\" ? \"\" : process.env.REACT_APP_API_URL;\r\nconst url = baseUrl + `/api/portfolio/${type}`;\r\n\r\nconst projects = createGenericReducer(type, \"/apî/portfolio\");\r\n\r\nconst projectsSlice = createSlice({\r\n  name: \"projects\",\r\n  initialState: {\r\n    delete: {\r\n      fetching: false,\r\n      loaded: false,\r\n      error: \"\",\r\n    },\r\n    collection: {\r\n      items: [],\r\n      error: \"\",\r\n      fetching: false,\r\n      loaded: false,\r\n    },\r\n  },\r\n  extraReducers: {\r\n    ...projects.reducers,\r\n  },\r\n});\r\n\r\nexport const Projects = {\r\n  ...projectsSlice.actions,\r\n  ...projects.actions,\r\n  upload: createProjects(type, url),\r\n};\r\nexport default projectsSlice.reducer;\r\n\r\nfunction createProjects(type, url) {\r\n  const upload = createAsyncThunk(\r\n    `${type}/upload`,\r\n    async (formData, callback = \"\") => {\r\n      const data = await fetch(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      return await data.json();\r\n    }\r\n  );\r\n\r\n  return upload;\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport experiencesReducer from \"./features/portfolio/experiences\";\r\nimport skillsReducer from \"./features/portfolio/skills\";\r\nimport projectsReducer from \"./features/portfolio/projects\";\r\nimport learningsReducer from \"./features/portfolio/learnings\";\r\nimport educationsReducer from \"./features/portfolio/educations\";\r\nimport companiesReducer from \"./features/nailedIt/companies\";\r\nimport sendingConfigsReducer from \"./features/nailedIt/sendingConfigs\";\r\nimport processesReducer from \"./features/nailedIt/processes\";\r\nimport emailTemplatesReducer from \"./features/nailedIt/emailTemplates\";\r\nimport configReducer from \"./features/config\";\r\n// import testReducer from \"./features/portfolio/test\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    config: configReducer,\r\n    experiences: experiencesReducer,\r\n    learnings: learningsReducer,\r\n    skills: skillsReducer,\r\n    projects: projectsReducer,\r\n    educations: educationsReducer,\r\n    companies: companiesReducer,\r\n    sendingConfigs: sendingConfigsReducer,\r\n    processes: processesReducer,\r\n    emailTemplates: emailTemplatesReducer,\r\n    // test : testReducer\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nfunction AccessibleNavigationAnnouncer() {\r\n  const [message, setMessage] = useState('')\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    // ignore the /\r\n    if (location.pathname.slice(1)) {\r\n      // make sure navigation has occurred and screen reader is ready\r\n      setTimeout(() => setMessage(`Navigated to ${location.pathname.slice(1)} page.`), 500)\r\n    } else {\r\n      setMessage('')\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <span className=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"true\">\r\n      {message}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AccessibleNavigationAnnouncer\r\n","import React, { lazy } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport AccessibleNavigationAnnouncer from \"./components/AccessibleNavigationAnnouncer\";\r\nimport SessionProvider from \"./reducers/session\";\r\n\r\nconst Layout = lazy(() => import(\"./containers/Layout\"));\r\nconst Login = lazy(() => import(\"./pages/Login\"));\r\nconst CreateAccount = lazy(() => import(\"./pages/CreateAccount\"));\r\nconst ForgotPassword = lazy(() => import(\"./pages/ForgotPassword\"));\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <SessionProvider>\r\n        <Provider store={store}>\r\n          <Router basename=\"/\">\r\n            <AccessibleNavigationAnnouncer />\r\n            <Switch>\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/create-account\" component={CreateAccount} />\r\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n\r\n              {/* Place new routes over this */}\r\n              <Route path=\"/\" component={Layout} />\r\n            </Switch>\r\n          </Router>\r\n        </Provider>\r\n      </SessionProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Suspense } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './assets/css/tailwind.output.css'\r\nimport './assets/css/custom.css'\r\nimport App from './App'\r\nimport { SidebarProvider } from './context/SidebarContext'\r\nimport ThemedSuspense from './components/ThemedSuspense'\r\nimport { Windmill } from '@windmill/react-ui'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// if (process.env.NODE_ENV !== 'production') {\r\n//   const axe = require('react-axe')\r\n//   axe(React, ReactDOM, 1000)\r\n// }\r\n\r\nReactDOM.render(\r\n  <SidebarProvider>\r\n    <Suspense fallback={<ThemedSuspense />}>\r\n      <Windmill usePreferences>\r\n        <App />\r\n      </Windmill>\r\n    </Suspense>\r\n  </SidebarProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}