{"version":3,"sources":["pages/nailedIt/SendingConfigs.js","components/Typography/PageTitle.js","configs/modelSchemas.js","components/Table.js"],"names":["SendingConfigsPage","dispatch","useDispatch","collection","useSelector","state","sendingConfigs","dataLists","config","useState","isFormOpen","setIsFormOpen","sendingConfigsSchema","enabled","status","formValues","setFormValues","pageTable","setPageTable","dataTable","setDataTable","useEffect","SendingConfigs","getAll","Config","getSelectsLists","totalResults","items","length","updateValues","e","target","name","value","slice","loaded","console","log","companiesList","s","company","_id","process","processesList","className","iconLeft","EditIcon","onClick","error","onChange","map","companyItem","key","processItem","rows","placeholder","check","type","checked","evt","create","fetching","service","columns","subKey","data","pagination","resultsPerPage","onPageChangeTable","p","deleteItem","id","window","confirm","PageTitle","children","experiencesSchema","bothLanguage","title","society","place","date","learningsSchema","educationsSchema","school","skillsSchema","text","projectsSchema","stacks","file","undefined","url","schema","en","fr","companiesSchema","address","email","contactGender","contactLastname","contactFirstname","processesSchema","customText","lastMailDate","nextMailDate","emailTemplatesSchema","subject","header","content","footer","DataTable","props","column","i","document","toLowerCase","documentKey","languages","keys","to","layout","size","aria-label","aria-hidden","label"],"mappings":"8PAuNeA,UA3Mf,WAA+B,IAAD,IACtBC,EAAWC,cACXC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAeH,cACzDI,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAMG,OAAOD,aACtD,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,2BACxCG,wBADuC,IAE1CC,SAAS,EACTC,OAAQ,WAHV,mBAAOC,EAAP,KAAmBC,EAAnB,KAOA,EAAkCP,mBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAEA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRpB,EAASqB,IAAeC,UACxBtB,EAASuB,IAAOC,qBACf,CAACxB,IAGJ,IACMyB,EAAevB,EAAWwB,MAAMC,OAOhCC,EAAe,SAACC,GACpBd,EAAc,2BACTD,GADQ,kBAEVe,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UA6C9B,OAtBAZ,qBAAU,WACJlB,EAAWwB,MAAMC,OAAS,GAC5BR,EACEjB,EAAWwB,MAAMO,MArCA,IAsCdjB,EAAY,GAtCE,GAuCfA,MAIL,CAACA,EAAWd,EAAWwB,QAE1BN,qBAAU,WACJd,EAAU4B,SACZC,QAAQC,IAAI9B,EAAU+B,eACtBtB,GAAc,SAACuB,GAAD,2BAAC,eACVA,GADS,IAEZC,QAAO,UAAEjC,EAAU+B,qBAAZ,aAAE,EAA0B,GAAGG,IACtCC,QAAO,UAAEnC,EAAUoC,qBAAZ,aAAE,EAA0B,GAAGF,YAGzC,CAAClC,IAGF,oCACE,kBAAC,IAAD,+BACA,6BACE,kBAAC,SAAD,CACEqC,UAAU,OACVC,SAAUC,WACVC,QAAS,kBAAMpC,GAAeD,KAE7BA,EAAa,SAAW,WAE1BA,GACC,yBAAKkC,UAAU,kBACXrC,EAAUyC,MAAMlC,QAChB,oCACE,6BACE,yBAAK8B,UAAU,iEACb,kBAAC,QAAD,KACE,yCACA,kBAAC,SAAD,CACEA,UAAU,OACVZ,KAAK,UACLC,MAAOlB,EAAWyB,QAClBS,SAAUpB,GAJZ,UAMGtB,EAAU+B,qBANb,aAMG,EAAyBY,KAAI,SAACC,GAAD,OAC5B,4BACEC,IAAK,WAAaD,EAAYnB,KAC9BC,MAAOkB,EAAYV,KAElBU,EAAYnB,WAKrB,kBAAC,QAAD,KACE,yCACA,kBAAC,SAAD,CACEY,UAAU,OACVX,MAAOlB,EAAW2B,QAClBV,KAAK,UACLiB,SAAUpB,GAJZ,UAMGtB,EAAUoC,qBANb,aAMG,EAAyBO,KAAI,SAACG,GAAD,OAC5B,4BACED,IAAK,WAAaC,EAAYrB,KAC9BC,MAAOoB,EAAYZ,KAElBY,EAAYrB,WAKrB,kBAAC,QAAD,KACE,wCACA,kBAAC,SAAD,CACEY,UAAU,OACVZ,KAAK,SACLiB,SAAUpB,GAEV,4BAAQI,MAAM,SAAd,iBACA,4BAAQA,MAAM,WAAd,aAGJ,kBAAC,QAAD,KACE,6CACA,kBAAC,WAAD,CACEW,UAAU,OACVU,KAAK,IACLtB,KAAK,aACLiB,SAAUpB,EACV0B,YAAY,mCAGhB,kBAAC,QAAD,CAAOX,UAAU,OAAOY,OAAK,GAC3B,kBAAC,QAAD,CACEC,KAAK,WACLzB,KAAK,UACL0B,QAAS3C,EAAWF,QACpBoC,SA5GO,SAACU,GAC5B3C,EAAc,2BACTD,GADQ,kBAEV4C,EAAI5B,OAAOC,KAAO2B,EAAI5B,OAAO2B,cA2Gd,0BAAMd,UAAU,QACb7B,EAAWF,QAAU,YAAW,sBAKzC,kBAAC,SAAD,CACE+B,UAAU,gBACVC,SAAUC,WACVC,QA3HH,WACX9C,EAASqB,IAAesC,OAAO7C,MAuHnB,cAYTZ,EAAW0D,UAAY,4CACvB1D,EAAWgC,QAAUhC,EAAWwB,MAAMC,OAAS,GAC9C,kBAAC,IAAD,CACE6B,KAAK,iBACLK,QAAQ,KACRC,QAAS,CACP,CAAE/B,KAAM,UAAWgC,OAAQ,QAC3B,CAAEhC,KAAM,UAAWgC,OAAQ,QAC3B,CAAEhC,KAAM,UACR,CAAEA,KAAM,cAAeoB,IAAK,cAC5B,CAAEpB,KAAM,eAAgBoB,IAAK,gBAC7B,CAAEpB,KAAM,eAAgBoB,IAAK,iBAE/Ba,KAAM9C,EACN+C,WAAY,CACVxC,eACAyC,eA3Ka,GA4KbC,kBAxKV,SAA2BC,GACzBnD,EAAamD,KAyKPC,WA/JW,SAACC,GAClB,OAAO,WACFC,OAAOC,QAAQ,6DAChBxE,EAASqB,IAAegD,WAAWC,W,gCCpD3C,oBAQeG,IANf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,wBAAI/B,UAAU,gEAAgE+B,K,2eCFrEC,EAAoBC,EAAa,CAC5CC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,KAAM,KAEKC,EAAkB,CAC7BlD,KAAM,IAEKmD,EAAmBN,EAAa,CAC3CC,MAAO,GACPM,OAAQ,GACRJ,MAAO,GACPC,KAAM,KAEKI,EAAeR,EAAa,CACvC7C,KAAM,GACNsD,KAAM,KAEKC,EAAc,2BACtBV,EAAa,CACd7C,KAAM,GACNwD,OAAQ,GACRP,KAAM,MAJiB,IAMzBQ,UAAMC,EACNC,IAAK,KAGP,SAASd,EAAae,GACpB,MAAO,CAAEC,GAAG,eAAMD,GAAUE,GAAG,eAAMF,IAIhC,IAAMG,EAAkB,CAC7B/D,KAAM,GACNgE,QAAS,GACTC,MAAO,GACPC,cAAe,IACfC,gBAAiB,GACjBC,iBAAkB,IAEPC,EAAkB,CAC7BrE,KAAM,IAEKpB,EAAuB,CAClC4B,QAAS,GACTE,QAAS,GACT5B,OAAQ,GACRwF,WAAY,GACZC,aAAc,GACdC,aAAc,GACd3F,SAAS,GAEE4F,EAAuB,CAClCzE,KAAM,GACN0E,QAAS,GACTC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACR/F,OAAQ,QACR4B,QAAS,K,gCC/DX,4CAoGeoE,IApFG,SAACC,GAAW,IAAD,EAC3B,OACE,yBAAKnE,UAAS,UAAEmE,EAAMnE,iBAAR,QAAqB,IACjC,kBAAC,iBAAD,CAAgBA,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACGmE,EAAMhD,QAAQb,KAAI,SAAC8D,EAAQC,GAAT,OACjB,kBAAC,YAAD,CAAW7D,IAAK6D,GAAID,EAAOhF,SAE7B,kBAAC,YAAD,kBAGJ,kBAAC,YAAD,KACG+E,EAAM9C,KAAKf,KAAI,SAACgE,EAAUD,GACzB,OACE,kBAAC,WAAD,CAAU7D,IAAK6D,GACZF,EAAMhD,QAAQb,KAAI,SAAC8D,GAAY,IAAD,IAkBjB,IAjBR5D,EAAG,UAAG4D,EAAO5D,WAAV,QAAiB4D,EAAOhF,KAAKmF,cAChCnD,EAAM,UAAGgD,EAAOhD,cAAV,QAAoB,GAC1BoD,EAAcL,EAAMM,UACpBH,EAASpB,GAAG1C,GACZ8D,EAAS9D,IAEK,WAAhB4D,EAAOvD,MACgB,qBAAhBuD,EAAOM,OAEdF,EAAcL,EAAMM,UAChBH,EAASpB,GAAGkB,EAAOM,KAAK,IACxB,IACAJ,EAASpB,GAAGkB,EAAOM,KAAK,IACxBJ,EAASF,EAAOM,KAAK,IACrB,IACAJ,EAASF,EAAOM,KAAK,KAEvBtD,KACFoD,EAAW,oBAAGA,SAAH,aAAG,EAAcpD,UAAjB,QAA4BoD,GAGzC,OACE,kBAAC,YAAD,CAAWhE,IAAG,UAAK4D,EAAOhF,KAAZ,QACZ,yBAAKY,UAAU,6BACb,6BACE,uBAAGA,UAAU,iBAAiBwE,SAMxC,kBAAC,YAAD,KACE,yBAAKxE,UAAU,+BACb,kBAAC,IAAD,CAAM2E,GAAE,WAAMR,EAAMjD,QAAZ,YAAuBiD,EAAMtD,KAA7B,YAAqCyD,EAASzE,MACpD,kBAAC,SAAD,CAAQ+E,OAAO,OAAOC,KAAK,OAAOC,aAAW,QAC3C,kBAAC,WAAD,CAAU9E,UAAU,UAAU+E,cAAY,WAG9C,kBAAC,SAAD,CACEH,OAAO,OACPC,KAAK,OACLC,aAAW,SACX3E,QAASgE,EAAMzC,WAAW4C,EAASzE,MAEnC,kBAAC,YAAD,CAAWG,UAAU,UAAU+E,cAAY,kBAS3D,kBAAC,cAAD,KACE,kBAAC,aAAD,CACEjG,aAAcqF,EAAM7C,WAAWxC,aAC/ByC,eAAgB4C,EAAM7C,WAAWC,eACjClB,SAAU8D,EAAM7C,WAAWE,kBAC3BwD,MAAM","file":"static/js/13.551f8132.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Textarea, Label, Button, Select, Input } from \"@windmill/react-ui\";\r\nimport { EditIcon } from \"../../icons\";\r\n\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\nimport Table from \"../../components/Table\";\r\n\r\nimport { SendingConfigs } from \"../../redux/features/nailedIt/sendingConfigs\";\r\nimport { Config } from \"../../redux/features/config\";\r\nimport { sendingConfigsSchema } from \"../../configs/modelSchemas\";\r\n\r\nfunction SendingConfigsPage() {\r\n  const dispatch = useDispatch();\r\n  const collection = useSelector((state) => state.sendingConfigs.collection);\r\n  const dataLists = useSelector((state) => state.config.dataLists);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [formValues, setFormValues] = useState({\r\n    ...sendingConfigsSchema,\r\n    enabled: true,\r\n    status: \"first\",\r\n  });\r\n\r\n  // setup pages control for every table\r\n  const [pageTable, setPageTable] = useState(1);\r\n  // setup data for every table\r\n  const [dataTable, setDataTable] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(SendingConfigs.getAll());\r\n    dispatch(Config.getSelectsLists());\r\n  }, [dispatch]);\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 10;\r\n  const totalResults = collection.items.length;\r\n\r\n  // pagination change control\r\n  function onPageChangeTable(p) {\r\n    setPageTable(p);\r\n  }\r\n\r\n  const updateValues = (e) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    return () => {\r\n      if(window.confirm('Etes-vous sûr de vouloir supprimer cet élément?')) {\r\n        dispatch(SendingConfigs.deleteItem(id));\r\n      }\r\n    };\r\n  };\r\n\r\n  const save = () => {\r\n    dispatch(SendingConfigs.create(formValues));\r\n  };\r\n\r\n  const handleCheckboxChange = (evt) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [evt.target.name]: evt.target.checked,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (collection.items.length > 0) {\r\n      setDataTable(\r\n        collection.items.slice(\r\n          (pageTable - 1) * resultsPerPage,\r\n          pageTable * resultsPerPage\r\n        )\r\n      );\r\n    }\r\n  }, [pageTable, collection.items]);\r\n\r\n  useEffect(() => {\r\n    if (dataLists.loaded) {\r\n      console.log(dataLists.companiesList);\r\n      setFormValues((s) => ({\r\n        ...s,\r\n        company: dataLists.companiesList?.[0]._id,\r\n        process: dataLists.processesList?.[0]._id,\r\n      }));\r\n    }\r\n  }, [dataLists]);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Sending Configurations</PageTitle>\r\n      <div>\r\n        <Button\r\n          className=\"mb-5\"\r\n          iconLeft={EditIcon}\r\n          onClick={() => setIsFormOpen(!isFormOpen)}\r\n        >\r\n          {isFormOpen ? \"Fermer\" : \"Ajouter\"}\r\n        </Button>\r\n        {isFormOpen && (\r\n          <div className=\"flex flex-col\">\r\n            {!dataLists.error.status && (\r\n              <>\r\n                <div>\r\n                  <div className=\"px-4 py-3 mb-2 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n                    <Label>\r\n                      <span>Company</span>\r\n                      <Select\r\n                        className=\"mt-1\"\r\n                        name=\"company\"\r\n                        value={formValues.company}\r\n                        onChange={updateValues}\r\n                      >\r\n                        {dataLists.companiesList?.map((companyItem) => (\r\n                          <option\r\n                            key={\"company_\" + companyItem.name}\r\n                            value={companyItem._id}\r\n                          >\r\n                            {companyItem.name}\r\n                          </option>\r\n                        ))}\r\n                      </Select>\r\n                    </Label>\r\n                    <Label>\r\n                      <span>Process</span>\r\n                      <Select\r\n                        className=\"mt-1\"\r\n                        value={formValues.process}\r\n                        name=\"process\"\r\n                        onChange={updateValues}\r\n                      >\r\n                        {dataLists.processesList?.map((processItem) => (\r\n                          <option\r\n                            key={\"process_\" + processItem.name}\r\n                            value={processItem._id}\r\n                          >\r\n                            {processItem.name}\r\n                          </option>\r\n                        ))}\r\n                      </Select>\r\n                    </Label>\r\n                    <Label>\r\n                      <span>Status</span>\r\n                      <Select\r\n                        className=\"mt-1\"\r\n                        name=\"status\"\r\n                        onChange={updateValues}\r\n                      >\r\n                        <option value=\"first\">PREMIER ENVOI</option>\r\n                        <option value=\"relance\">RELANCE</option>\r\n                      </Select>\r\n                    </Label>\r\n                    <Label>\r\n                      <span>Custom Text</span>\r\n                      <Textarea\r\n                        className=\"mt-1\"\r\n                        rows=\"3\"\r\n                        name=\"customText\"\r\n                        onChange={updateValues}\r\n                        placeholder=\"Enter some long form content.\"\r\n                      />\r\n                    </Label>\r\n                    <Label className=\"mt-3\" check>\r\n                      <Input\r\n                        type=\"checkbox\"\r\n                        name=\"enabled\"\r\n                        checked={formValues.enabled}\r\n                        onChange={handleCheckboxChange}\r\n                      />\r\n                      <span className=\"ml-2\">\r\n                        {formValues.enabled ? \"Activé\" : \"Désactivé\"}\r\n                      </span>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n                <Button\r\n                  className=\"mb-5 self-end\"\r\n                  iconLeft={EditIcon}\r\n                  onClick={save}\r\n                >\r\n                  Ajouter\r\n                </Button>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {collection.fetching && <p>Chargement...</p>}\r\n      {collection.loaded && collection.items.length > 0 && (\r\n        <Table\r\n          type=\"sendingConfigs\"\r\n          service=\"ni\"\r\n          columns={[\r\n            { name: \"Company\", subKey: \"name\" },\r\n            { name: \"Process\", subKey: \"name\" },\r\n            { name: \"Status\" },\r\n            { name: \"Custom Text\", key: \"customText\" },\r\n            { name: \"Last Sending\", key: \"lastMailDate\" },\r\n            { name: \"Next Sending\", key: \"nextMailDate\" },\r\n          ]}\r\n          data={dataTable}\r\n          pagination={{\r\n            totalResults,\r\n            resultsPerPage,\r\n            onPageChangeTable,\r\n          }}\r\n          deleteItem={deleteItem}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SendingConfigsPage;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","//PORTFOLIO\r\n\r\nexport const experiencesSchema = bothLanguage({\r\n  title: \"\",\r\n  society: \"\",\r\n  place: \"\",\r\n  date: \"\",\r\n});\r\nexport const learningsSchema = {\r\n  name: \"\",\r\n};\r\nexport const educationsSchema = bothLanguage({\r\n  title: \"\",\r\n  school: \"\",\r\n  place: \"\",\r\n  date: \"\",\r\n});\r\nexport const skillsSchema = bothLanguage({\r\n  name: \"\",\r\n  text: \"\",\r\n});\r\nexport const projectsSchema = {\r\n  ...bothLanguage({\r\n    name: \"\",\r\n    stacks: [],\r\n    date: \"\",\r\n  }),\r\n  file: undefined,\r\n  url: \"\",\r\n};\r\n\r\nfunction bothLanguage(schema) {\r\n  return { en: { ...schema }, fr: { ...schema } };\r\n}\r\n\r\n//NAILED IT\r\nexport const companiesSchema = {\r\n  name: \"\",\r\n  address: \"\",\r\n  email: \"\",\r\n  contactGender: \"0\",\r\n  contactLastname: \"\",\r\n  contactFirstname: \"\",\r\n};\r\nexport const processesSchema = {\r\n  name: \"\",\r\n};\r\nexport const sendingConfigsSchema = {\r\n  company: \"\",\r\n  process: \"\",\r\n  status: \"\",\r\n  customText: \"\",\r\n  lastMailDate: \"\",\r\n  nextMailDate: \"\",\r\n  enabled: true,\r\n};\r\nexport const emailTemplatesSchema = {\r\n  name: \"\",\r\n  subject: \"\",\r\n  header: \"\",\r\n  content: \"\",\r\n  footer: \"\",\r\n  status: \"first\",\r\n  process: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { EditIcon, TrashIcon } from \"../icons\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  Button,\r\n  Pagination,\r\n} from \"@windmill/react-ui\";\r\n\r\nconst DataTable = (props) => {\r\n  return (\r\n    <div className={props.className ?? \"\"}>\r\n      <TableContainer className=\"mb-8\">\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              {props.columns.map((column, i) => (\r\n                <TableCell key={i}>{column.name}</TableCell>\r\n              ))}\r\n              <TableCell>Actions</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {props.data.map((document, i) => {\r\n              return (\r\n                <TableRow key={i}>\r\n                  {props.columns.map((column) => {\r\n                    let key = column.key ?? column.name.toLowerCase();\r\n                    let subKey = column.subKey ?? \"\";\r\n                    let documentKey = props.languages\r\n                      ? document.fr[key]\r\n                      : document[key];\r\n                    if (\r\n                      column.type === \"concat\" &&\r\n                      typeof column.keys !== \"undefined\"\r\n                    ) {\r\n                      documentKey = props.languages\r\n                        ? document.fr[column.keys[0]] +\r\n                          \" \" +\r\n                          document.fr[column.keys[1]]\r\n                        : document[column.keys[0]] +\r\n                          \" \" +\r\n                          document[column.keys[1]];\r\n                    }\r\n                    if (subKey) {\r\n                      documentKey = documentKey?.[subKey] ?? documentKey;\r\n                    }\r\n\r\n                    return (\r\n                      <TableCell key={`${column.name}_th`}>\r\n                        <div className=\"flex items-center text-sm\">\r\n                          <div>\r\n                            <p className=\"font-semibold\">{documentKey}</p>\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  <TableCell>\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <Link to={`/${props.service}/${props.type}/${document._id}`}>\r\n                        <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\r\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                        </Button>\r\n                      </Link>\r\n                      <Button\r\n                        layout=\"link\"\r\n                        size=\"icon\"\r\n                        aria-label=\"Delete\"\r\n                        onClick={props.deleteItem(document._id)}\r\n                      >\r\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={props.pagination.totalResults}\r\n            resultsPerPage={props.pagination.resultsPerPage}\r\n            onChange={props.pagination.onPageChangeTable}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"sourceRoot":""}