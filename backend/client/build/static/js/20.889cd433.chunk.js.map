{"version":3,"sources":["pages/portfolio/Learning.js","components/Typography/PageTitle.js","configs/modelSchemas.js","redux/actions.js","components/Forms/Form.js","pages/generics/ItemPage.js"],"names":["LearningPage","title","type","itemFormValues","updateValues","console","log","className","name","value","values","onChange","PageTitle","children","experiencesSchema","bothLanguage","society","place","date","learningsSchema","educationsSchema","school","skillsSchema","text","projectsSchema","stacks","file","undefined","url","schema","en","fr","companiesSchema","address","email","contactGender","contactLastname","contactFirstname","processesSchema","sendingConfigsSchema","company","process","status","customText","lastMailDate","nextMailDate","enabled","emailTemplatesSchema","subject","header","content","footer","config","learnings","experiences","educations","skills","companies","processes","emailTemplates","sendingConfigs","Form","props","iconLeft","EditIcon","onClick","save","isEditForm","ItemPage","id","useParams","dispatch","useDispatch","history","useHistory","useState","loaded","JSON","parse","stringify","schemas","setItemFormValues","item","useSelector","state","language","evt","persist","s","target","useEffect","Actions","getOne","fetching","tempValues","key","data","options","selectKeys","goBack","update","params","error","message","checked"],"mappings":"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","file":"static/js/20.889cd433.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Input, Label } from \"@windmill/react-ui\";\r\n\r\nimport ItemPage from \"../generics/ItemPage\";\r\n\r\nfunction LearningPage() {\r\n  return (\r\n    <ItemPage title=\"Learning\" type=\"learnings\">\r\n      {(itemFormValues, updateValues) => {\r\n        console.log(itemFormValues)\r\n        return (\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"flex-col\">\r\n              <div className=\"flex-1 px-4 py-3 mb-2 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n                <Label>\r\n                  <span>Name</span>\r\n                  <Input\r\n                    name=\"name\"\r\n                    className=\"mt-1\"\r\n                    value={itemFormValues.values.name}\r\n                    onChange={updateValues}\r\n                  />\r\n                </Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </ItemPage>\r\n  );\r\n}\r\n\r\nexport default LearningPage;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","//PORTFOLIO\r\n\r\nexport const experiencesSchema = bothLanguage({\r\n  title: \"\",\r\n  society: \"\",\r\n  place: \"\",\r\n  date: \"\",\r\n});\r\nexport const learningsSchema = {\r\n  name: \"\",\r\n};\r\nexport const educationsSchema = bothLanguage({\r\n  title: \"\",\r\n  school: \"\",\r\n  place: \"\",\r\n  date: \"\",\r\n});\r\nexport const skillsSchema = bothLanguage({\r\n  name: \"\",\r\n  text: \"\",\r\n});\r\nexport const projectsSchema = {\r\n  ...bothLanguage({\r\n    name: \"\",\r\n    stacks: [],\r\n    date: \"\",\r\n  }),\r\n  file: undefined,\r\n  url: \"\",\r\n};\r\n\r\nfunction bothLanguage(schema) {\r\n  return { en: { ...schema }, fr: { ...schema } };\r\n}\r\n\r\n//NAILED IT\r\nexport const companiesSchema = {\r\n  name: \"\",\r\n  address: \"\",\r\n  email: \"\",\r\n  contactGender: \"0\",\r\n  contactLastname: \"\",\r\n  contactFirstname: \"\",\r\n};\r\nexport const processesSchema = {\r\n  name: \"\",\r\n};\r\nexport const sendingConfigsSchema = {\r\n  company: \"\",\r\n  process: \"\",\r\n  status: \"\",\r\n  customText: \"\",\r\n  lastMailDate: \"\",\r\n  nextMailDate: \"\",\r\n  enabled: true,\r\n};\r\nexport const emailTemplatesSchema = {\r\n  name: \"\",\r\n  subject: \"\",\r\n  header: \"\",\r\n  content: \"\",\r\n  footer: \"\",\r\n  status: \"first\",\r\n  process: \"\",\r\n};\r\n","import { Config as config } from \"./features/config\";\r\nimport { Learnings as learnings } from \"./features/portfolio/learnings\";\r\nimport { Experiences as experiences } from \"./features/portfolio/experiences\";\r\nimport { Educations as educations } from \"./features/portfolio/educations\";\r\nimport { Skills as skills } from \"./features/portfolio/skills\";\r\nimport { Companies as companies } from \"./features/nailedIt/companies\";\r\nimport { Processes as processes } from \"./features/nailedIt/processes\";\r\nimport { EmailTemplates as emailTemplates } from \"./features/nailedIt/emailTemplates\";\r\nimport { SendingConfigs as sendingConfigs } from \"./features/nailedIt/sendingConfigs\";\r\n\r\nexport default {\r\n  config,\r\n  learnings,\r\n  experiences,\r\n  educations,\r\n  skills,\r\n  companies,\r\n  processes,\r\n  emailTemplates,\r\n  sendingConfigs,\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@windmill/react-ui\";\r\nimport { EditIcon } from \"../../icons\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div>\r\n      {props.children}\r\n      <Button\r\n        className=\"mb-5 self-end\"\r\n        iconLeft={EditIcon}\r\n        onClick={props.save}\r\n      >\r\n        {props.isEditForm ? \"Enregistrer les modifications\" : \"Ajouter\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\nimport { Button, Alert } from \"@windmill/react-ui\";\r\n\r\nimport Actions from \"../../redux/actions\";\r\n\r\nimport * as schemas from \"../../configs/modelSchemas\";\r\nimport Form from \"../../components/Forms/Form\";\r\n\r\nfunction ItemPage(props) {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [itemFormValues, setItemFormValues] = useState({\r\n    loaded: false,\r\n    values: JSON.parse(JSON.stringify(schemas[props.type + \"Schema\"])),\r\n  });\r\n  const item = useSelector((state) => state[props.type].item);\r\n\r\n  const updateValuesWithLanguages = (language) => (evt) => {\r\n    evt.persist();\r\n    setItemFormValues((s) => ({\r\n      ...s,\r\n      values: {\r\n        ...s.values,\r\n        [language]: {\r\n          ...s.values[language],\r\n          [evt.target.name]: evt.target.value,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const updateValuesOneLanguage = (evt) => {\r\n    evt.persist();\r\n    setItemFormValues((s) => ({\r\n      ...s,\r\n      values: {\r\n        ...s.values,\r\n        [evt.target.name]: evt.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const updateValues = props.language\r\n    ? updateValuesWithLanguages\r\n    : updateValuesOneLanguage;\r\n\r\n  const handleCheckboxChange = (evt) => {\r\n    setItemFormValues((s) => ({\r\n      ...s,\r\n      values: {\r\n        ...s.values,\r\n        [evt.target.name]: evt.target.checked,\r\n      },\r\n    }));\r\n  };\r\n\r\n  //TODO: DELETE BUTTON\r\n  const deleteItem = (id) => {\r\n    return () => {\r\n      dispatch(Actions[props.type].deleteItem(id));\r\n    };\r\n  };\r\n\r\n  const save = () => {\r\n    dispatch(Actions[props.type].update({ id, params: itemFormValues.values }));\r\n  };\r\n\r\n  //GET DATA\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(Actions[props.type].getOne(id));\r\n    }\r\n  }, [id]);\r\n\r\n  //POPULATE FORM VALUES\r\n  useEffect(() => {\r\n    if (item.loaded && !item.fetching) {\r\n      let tempValues = JSON.parse(JSON.stringify(itemFormValues.values));\r\n      if (props.language) {\r\n        for (let language in tempValues) {\r\n          for (let key in tempValues[language]) {\r\n            if (typeof item.data[language][key] !== \"undefined\") {\r\n              if (props.options?.selectKeys && props.options.selectKeys[key]) {\r\n                tempValues[language][key] =\r\n                  item.data[language][key][props.options.selectKeys[key]];\r\n              } else {\r\n                tempValues[language][key] = item.data[language][key];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        for (let key in tempValues) {\r\n          if (typeof item.data[key] !== \"undefined\") {\r\n            if (props.options?.selectKeys && props.options.selectKeys[key]) {\r\n              tempValues[key] = item.data[key][props.options.selectKeys[key]];\r\n            } else {\r\n              tempValues[key] = item.data[key];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      setItemFormValues({\r\n        values: tempValues,\r\n        loaded: true,\r\n      });\r\n    }\r\n  }, [item.loaded, item.fetching]);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>{props.title}</PageTitle>\r\n      <div>\r\n        <Button className=\"mb-3\" onClick={() => history.goBack()}>\r\n          Revenir\r\n        </Button>\r\n      </div>\r\n      {itemFormValues.loaded && !item.fetching && (\r\n        //TODO: REFACTOR ALL FORMS IN A FILE\r\n        //   typeof Forms[props.type] !== \"undefined\" &&\r\n        <Form save={save} isEditForm>\r\n          {item.error.status === true && (\r\n            <Alert type=\"warning\">{item.error.message}</Alert>\r\n          )}\r\n          {props.children(itemFormValues, updateValues, handleCheckboxChange)}\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemPage;\r\n"],"sourceRoot":""}