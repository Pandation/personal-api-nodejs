{"version":3,"sources":["pages/nailedIt/EmailTemplates.js","components/Typography/PageTitle.js","configs/modelSchemas.js","components/Table.js"],"names":["EmailTemplatesPage","dispatch","useDispatch","collection","useSelector","state","emailTemplates","dataLists","config","useState","isFormOpen","setIsFormOpen","emailTemplatesSchema","status","formValues","setFormValues","pageTable","setPageTable","dataTable","setDataTable","useEffect","EmailTemplates","getAll","Config","getSelectsLists","totalResults","items","length","updateValues","e","target","name","value","slice","loaded","s","process","processesList","_id","className","iconLeft","EditIcon","onClick","onChange","map","processItem","key","data","valid","checkData","create","fetching","service","type","columns","subKey","pagination","resultsPerPage","onPageChangeTable","p","deleteItem","id","PageTitle","children","experiencesSchema","bothLanguage","title","society","place","date","learningsSchema","educationsSchema","school","skillsSchema","text","projectsSchema","stacks","file","undefined","url","schema","en","fr","companiesSchema","address","email","contactGender","contactLastname","contactFirstname","processesSchema","sendingConfigsSchema","company","customText","lastMailDate","nextMailDate","enabled","subject","header","content","footer","DataTable","props","column","i","document","toLowerCase","documentKey","languages","keys","to","layout","size","aria-label","aria-hidden","label"],"mappings":"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","file":"static/js/12.e8500ab9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\nimport Table from \"../../components/Table\";\r\nimport { Input, Label, Button, Textarea, Select } from \"@windmill/react-ui\";\r\nimport { EditIcon } from \"../../icons\";\r\n\r\nimport { EmailTemplates } from \"../../redux/features/nailedIt/emailTemplates\";\r\nimport { Config } from \"../../redux/features/config\";\r\nimport { emailTemplatesSchema } from \"../../configs/modelSchemas\";\r\n\r\nfunction checkData(data) {\r\n  let valid = true;\r\n  for (const key in data) {\r\n    if (data[key] === \"\") {\r\n      valid = false;\r\n    }\r\n  }\r\n  return valid;\r\n}\r\nfunction EmailTemplatesPage() {\r\n  const dispatch = useDispatch();\r\n  const collection = useSelector((state) => state.emailTemplates.collection);\r\n  const dataLists = useSelector((state) => state.config.dataLists);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [formValues, setFormValues] = useState({\r\n    ...emailTemplatesSchema,\r\n    status: \"first\",\r\n  });\r\n\r\n  // setup pages control for every table\r\n  const [pageTable, setPageTable] = useState(1);\r\n  // setup data for every table\r\n  const [dataTable, setDataTable] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(EmailTemplates.getAll());\r\n    dispatch(Config.getSelectsLists());\r\n  }, [dispatch]);\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 10;\r\n  const totalResults = collection.items.length;\r\n\r\n  // pagination change control\r\n  function onPageChangeTable(p) {\r\n    setPageTable(p);\r\n  }\r\n\r\n  const updateValues = (e) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    return () => {\r\n      dispatch(EmailTemplates.deleteItem(id));\r\n    };\r\n  };\r\n\r\n  const save = () => {\r\n    if (!checkData(formValues)) {\r\n      return;\r\n    }\r\n    dispatch(EmailTemplates.create(formValues));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (collection.items.length > 0) {\r\n      setDataTable(\r\n        collection.items.slice(\r\n          (pageTable - 1) * resultsPerPage,\r\n          pageTable * resultsPerPage\r\n        )\r\n      );\r\n    }\r\n  }, [pageTable, collection.items]);\r\n\r\n  useEffect(() => {\r\n    if (dataLists.loaded) {\r\n      setFormValues((s) => ({\r\n        ...s,\r\n        process: dataLists.processesList[0]._id,\r\n      }));\r\n    }\r\n  }, [dataLists]);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Email Templates</PageTitle>\r\n      <div>\r\n        <Button\r\n          className=\"mb-5\"\r\n          iconLeft={EditIcon}\r\n          onClick={() => setIsFormOpen(!isFormOpen)}\r\n        >\r\n          {isFormOpen ? \"Fermer\" : \"Ajouter\"}\r\n        </Button>\r\n        {isFormOpen && (\r\n          <div className=\"flex flex-col\">\r\n            <div>\r\n              <div className=\"px-4 py-3 mb-2 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n                <Label>\r\n                  <span>Name*</span>\r\n                  <Input name=\"name\" className=\"mt-1\" onChange={updateValues} />\r\n                </Label>\r\n                <Label>\r\n                  <span>Subject*</span>\r\n                  <Input\r\n                    name=\"subject\"\r\n                    className=\"mt-1\"\r\n                    onChange={updateValues}\r\n                  />\r\n                </Label>\r\n                <Label>\r\n                  <span>Header*</span>\r\n                  <Textarea\r\n                    name=\"header\"\r\n                    className=\"mt-1\"\r\n                    onChange={updateValues}\r\n                  />\r\n                </Label>\r\n\r\n                <Label>\r\n                  <span>Content</span>\r\n                  <Textarea\r\n                    name=\"content\"\r\n                    className=\"mt-1\"\r\n                    onChange={updateValues}\r\n                  />\r\n                </Label>\r\n                <Label>\r\n                  <span>Footer*</span>\r\n                  <Textarea\r\n                    name=\"footer\"\r\n                    className=\"mt-1\"\r\n                    onChange={updateValues}\r\n                  />\r\n                </Label>\r\n                <Label>\r\n                  <span>Process</span>\r\n                  <Select\r\n                    className=\"mt-1\"\r\n                    value={formValues.process}\r\n                    name=\"process\"\r\n                    onChange={updateValues}\r\n                  >\r\n                    {dataLists.processesList?.map((processItem) => (\r\n                      <option\r\n                        key={\"process_\" + processItem.name}\r\n                        value={processItem._id}\r\n                      >\r\n                        {processItem.name}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </Label>\r\n                <Label>\r\n                  <span>Status</span>\r\n                  <Select\r\n                    className=\"mt-1\"\r\n                    value={formValues.status}\r\n                    name=\"status\"\r\n                    onChange={updateValues}\r\n                  >\r\n                    <option value=\"first\">PREMIER ENVOI</option>\r\n                    <option value=\"relance\">RELANCE</option>\r\n                  </Select>\r\n                </Label>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              className=\"mb-5 self-end\"\r\n              iconLeft={EditIcon}\r\n              onClick={save}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {collection.fetching && <p>Chargement...</p>}\r\n      {collection.loaded && collection.items.length > 0 && (\r\n        <Table\r\n          service=\"ni\"\r\n          type=\"emailTemplates\"\r\n          className=\"whiteSpaceNormal\"\r\n          columns={[\r\n            { name: \"Name\" },\r\n            { name: \"Subject\" },\r\n            { name: \"Header\" },\r\n            { name: \"Content\" },\r\n            { name: \"Footer\" },\r\n            { name: \"Process\", subKey: \"name\" },\r\n            { name: \"Status\" },\r\n          ]}\r\n          data={dataTable}\r\n          pagination={{\r\n            totalResults,\r\n            resultsPerPage,\r\n            onPageChangeTable,\r\n          }}\r\n          deleteItem={deleteItem}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmailTemplatesPage;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","//PORTFOLIO\r\n\r\nexport const experiencesSchema = bothLanguage({\r\n  title: \"\",\r\n  society: \"\",\r\n  place: \"\",\r\n  date: \"\",\r\n});\r\nexport const learningsSchema = {\r\n  name: \"\",\r\n};\r\nexport const educationsSchema = bothLanguage({\r\n  title: \"\",\r\n  school: \"\",\r\n  place: \"\",\r\n  date: \"\",\r\n});\r\nexport const skillsSchema = bothLanguage({\r\n  name: \"\",\r\n  text: \"\",\r\n});\r\nexport const projectsSchema = {\r\n  ...bothLanguage({\r\n    name: \"\",\r\n    stacks: [],\r\n    date: \"\",\r\n  }),\r\n  file: undefined,\r\n  url: \"\",\r\n};\r\n\r\nfunction bothLanguage(schema) {\r\n  return { en: { ...schema }, fr: { ...schema } };\r\n}\r\n\r\n//NAILED IT\r\nexport const companiesSchema = {\r\n  name: \"\",\r\n  address: \"\",\r\n  email: \"\",\r\n  contactGender: \"0\",\r\n  contactLastname: \"\",\r\n  contactFirstname: \"\",\r\n};\r\nexport const processesSchema = {\r\n  name: \"\",\r\n};\r\nexport const sendingConfigsSchema = {\r\n  company: \"\",\r\n  process: \"\",\r\n  status: \"\",\r\n  customText: \"\",\r\n  lastMailDate: \"\",\r\n  nextMailDate: \"\",\r\n  enabled: true,\r\n};\r\nexport const emailTemplatesSchema = {\r\n  name: \"\",\r\n  subject: \"\",\r\n  header: \"\",\r\n  content: \"\",\r\n  footer: \"\",\r\n  status: \"first\",\r\n  process: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { EditIcon, TrashIcon } from \"../icons\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  Button,\r\n  Pagination,\r\n} from \"@windmill/react-ui\";\r\n\r\nconst DataTable = (props) => {\r\n  return (\r\n    <div className={props.className ?? \"\"}>\r\n      <TableContainer className=\"mb-8\">\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              {props.columns.map((column, i) => (\r\n                <TableCell key={i}>{column.name}</TableCell>\r\n              ))}\r\n              <TableCell>Actions</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {props.data.map((document, i) => {\r\n              return (\r\n                <TableRow key={i}>\r\n                  {props.columns.map((column) => {\r\n                    let key = column.key ?? column.name.toLowerCase();\r\n                    let subKey = column.subKey ?? \"\";\r\n                    let documentKey = props.languages\r\n                      ? document.fr[key]\r\n                      : document[key];\r\n                    if (\r\n                      column.type === \"concat\" &&\r\n                      typeof column.keys !== \"undefined\"\r\n                    ) {\r\n                      documentKey = props.languages\r\n                        ? document.fr[column.keys[0]] +\r\n                          \" \" +\r\n                          document.fr[column.keys[1]]\r\n                        : document[column.keys[0]] +\r\n                          \" \" +\r\n                          document[column.keys[1]];\r\n                    }\r\n                    if (subKey) {\r\n                      documentKey = documentKey?.[subKey] ?? documentKey;\r\n                    }\r\n\r\n                    return (\r\n                      <TableCell key={`${column.name}_th`}>\r\n                        <div className=\"flex items-center text-sm\">\r\n                          <div>\r\n                            <p className=\"font-semibold\">{documentKey}</p>\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  <TableCell>\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <Link to={`/${props.service}/${props.type}/${document._id}`}>\r\n                        <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\r\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                        </Button>\r\n                      </Link>\r\n                      <Button\r\n                        layout=\"link\"\r\n                        size=\"icon\"\r\n                        aria-label=\"Delete\"\r\n                        onClick={props.deleteItem(document._id)}\r\n                      >\r\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={props.pagination.totalResults}\r\n            resultsPerPage={props.pagination.resultsPerPage}\r\n            onChange={props.pagination.onPageChangeTable}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"sourceRoot":""}